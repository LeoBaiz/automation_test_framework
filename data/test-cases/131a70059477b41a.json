{"uid":"131a70059477b41a","name":"Login Test - Missing Username","fullName":"tests.test_login#test_missing_username","historyId":"6d5958bb02743ef082de81a670a2da2a","time":{"start":1745975813975,"stop":1745975814345,"duration":370},"description":"Este test verifica que un usuario sin nombre de usuario no pueda iniciar sesión.","descriptionHtml":"<p>Este test verifica que un usuario sin nombre de usuario no pueda iniciar sesión.</p>\n","status":"failed","statusMessage":"AssertionError: El mensaje de error no es el esperado\nassert 'Your username is invalid!\\n×' == 'Your username is invalid!'\n  \n  - Your username is invalid!\n  + Your username is invalid!\n  ?                          +\n  + ×","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"86e43c4f9a7d9c63ca5c43854b3291de\")>\n\n    @allure.title(\"Login Test - Missing Username\")\n    @allure.description(\"Este test verifica que un usuario sin nombre de usuario no pueda iniciar sesión.\")\n    def test_missing_username(driver):\n        login_page = LoginPage(driver)\n        login_page.load()  # Llama al método 'load' para abrir la página de login\n        login_page.enter_password(\"contraseña_valida\")\n        login_page.click_login()\n        # Aquí debes verificar que el mensaje de error para 'usuario faltante' se muestra\n>       assert login_page.get_flash_message() == \"Your username is invalid!\", \"El mensaje de error no es el esperado\"\nE       AssertionError: El mensaje de error no es el esperado\nE       assert 'Your username is invalid!\\n×' == 'Your username is invalid!'\nE         \nE         - Your username is invalid!\nE         + Your username is invalid!\nE         ?                          +\nE         + ×\n\ntests/test_login.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1745975813633,"stop":1745975813974,"duration":341},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Este test verifica que un usuario sin nombre de usuario no pueda iniciar sesión.","status":"failed","statusMessage":"AssertionError: El mensaje de error no es el esperado\nassert 'Your username is invalid!\\n×' == 'Your username is invalid!'\n  \n  - Your username is invalid!\n  + Your username is invalid!\n  ?                          +\n  + ×","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"86e43c4f9a7d9c63ca5c43854b3291de\")>\n\n    @allure.title(\"Login Test - Missing Username\")\n    @allure.description(\"Este test verifica que un usuario sin nombre de usuario no pueda iniciar sesión.\")\n    def test_missing_username(driver):\n        login_page = LoginPage(driver)\n        login_page.load()  # Llama al método 'load' para abrir la página de login\n        login_page.enter_password(\"contraseña_valida\")\n        login_page.click_login()\n        # Aquí debes verificar que el mensaje de error para 'usuario faltante' se muestra\n>       assert login_page.get_flash_message() == \"Your username is invalid!\", \"El mensaje de error no es el esperado\"\nE       AssertionError: El mensaje de error no es el esperado\nE       assert 'Your username is invalid!\\n×' == 'Your username is invalid!'\nE         \nE         - Your username is invalid!\nE         + Your username is invalid!\nE         ?                          +\nE         + ×\n\ntests/test_login.py:32: AssertionError","steps":[],"attachments":[{"uid":"9f28097c98dd53a4","name":"screenshot_test_missing_username.png","source":"9f28097c98dd53a4.png","type":"image/png","size":61175}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1745975814495,"stop":1745975814557,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"fv-az2032-856"},{"name":"thread","value":"3751-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"131a70059477b41a.json","parameterValues":[]}